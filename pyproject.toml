[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agraph-python"
dynamic = ["version"]
description = "AllegroGraph Python client"
readme = "README.rst"
authors = [
  {name = "Franz Inc.", email = "support@franz.com"}
]
license = {file = "LICENSE"}
requires-python = ">=3.8,<3.12"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Database",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "requests[socks]==2.26.0",
  "iso8601>=2.1.0,<2.2.0",
  "pandas>=2.0.0,<3.0.0",
]

[project.optional-dependencies]
test = ["packaging>=23.2.0,<23.3.0","pytest~=7.0.0","pytest-timeout~=2.2.0","pytest-mock~=3.11.0"]
style = ["isort~=5.11.0","black~=23.3.0"]
docs = ["sphinxcontrib-jupyter~=0.5.0"] # for building docs
dev = ["agraph-python[test,style,docs]","ipython~=7.34.0"]

[project.urls]
homepage = "https://github.com/franzinc/agraph-python"
documentation = "https://franz.com/agraph/support/documentation/current/python/"
repository = "https://github.com/franzinc/agraph-python"
changelog = "https://franz.com/agraph/support/documentation/current/python/changes.html"

[tool.hatch.version]
path = "src/franz/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/franz"]

[tool.hatch.build.targets.sdist]
only-include = ["src/franz"]

[tool.hatch.envs.default]
python = "3.8"

[tool.hatch.envs.test]
features = ["test"]
env-include = ["AGRAPH*"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.test.env-vars]
AG_RUN_SSL_TEST = "y"

[tool.hatch.envs.test.scripts]
run = "pytest"

[tool.hatch.envs.docs]
features = ["docs"]

[tool.hatch.envs.docs.env-vars]
AGRAPH_USER="test"
AGRAPH_PASSWORD="xyzzy"

[tool.hatch.envs.docs.scripts]
test = "cd docs; sphinx-build -b doctest src build/doctest"
build-html = "cd docs; sphinx-build -b html -j 5 -N src build/html"
build-jupyter = "cd docs; sphinx-build -b jupyter -N src build/jupyter"

[tool.hatch.envs.style]
features = ["style"]

[tool.hatch.envs.style.scripts]
check = [
  "isort --check-only --gitignore --diff .",
  "black --check --diff .",
]
fix = [
  "isort --gitignore .",
  "black .",
  "check",
]

[tool.pytest.ini_options]
minversion = "7.0.0"
addopts=[
  "--timeout=300",
  "--junitxml=report.xml",
  "--color=auto",
]
testpaths = [
  "src/franz/openrdf/tests/",
  "src/franz/miniclient/",
]
python_files = ["*test*.py"]

[tool.pyright]
include = ["src"]
exclude = [
  "**/node_modules",
  "**/_pycache__",
  ".venv/",
]
root = "src"
reportMissingImports = true
reportMissingTypeStubs = false
venvPath = "."
venv = ".venv"
pythonPlatform = "All"
verboseOutput = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["src"]
extend_skip = ["stress"]
filter_files = true
line_length = 88

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
    ^/stress/
)
'''
